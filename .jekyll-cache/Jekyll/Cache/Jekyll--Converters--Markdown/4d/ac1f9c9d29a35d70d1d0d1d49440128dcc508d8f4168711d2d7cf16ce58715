I"Z<hr />
<p>layout: single
title:  “[책]코딩 진로”
categories: [book]
tags: [book]</p>

<p>toc: true
toc_sticky: true
toc_label: “목차”
—</p>

<p>직업을 꿈으로 갖는 것과 적성을 파악하는 일은 다르다. 꿈으로서의 직업은 ‘내가 하고 싶은 일’이고, 적성은 ‘내가 잘할 수 있는 일’이다. 적성을 파악하는 것이 중요한 이유는, 그 직무에 수많은 시간을 쏟아부어야 하기 때문이다. 전 세계 20억명이 넘는 사용자를 보유하고 있는 페이스북의 CEO 마크 저커버그도 그들이 성공할 수 있는 비결에 대한 대답으로, 단지 6년간 꾸준히 코딩했을 뿐이라 답했다.</p>

<blockquote>
  <p>“사실 실제 이야기는 좀 지루할 수 있어요. 그렇죠? 제 말은 우리가 페이스북을 만들 때, 사람들은 어떤 비결이 있을 거라 생각하지만, 우리는 그저 컴퓨터 앞에서 6년간 코딩을 했을 뿐이에요.”
                                                                                                                         _마크 저커버그</p>
</blockquote>

<p>적성을 파악하는 작업은 꿈을 파악하는 과정과 다르게 지극히 현실적으로 접근해야 한다. 꿈을 파악하는 과정이 내가 생각하는 이상적인 모습과 함께 스스로 멋지다고 생각하는 모습들을 추려 내는 거라면, 적성을 파악하는 과정은 내가 과연 이 직업이 가진 일상의 무게를 견뎌 낼 수 있는지 파악하는 것이다. 수면 위의 백조는 아름다워 보이지만 수면 아래의 발은 가라앉지 않기 위해 매우 바쁘게 움직이고 있는 것을 알 수 있다. 당신이 백조가 되고 싶다면, 수면 아래의 발길질에 익숙해지는 경험을 해보는 것은 선택이 아니라 필수다.</p>

<p>특히 프로그래머에게 이 과정은 매우 중요하다. 처음에 상상했던 프로그래머는 정말 어려운 비즈니스 로직을 멋들어지게 짜내어 팀원들에게 인정받는 모습이었지만, 실질적으로는 비즈니스 로직 그 자체를 짜는 시간이 그렇게 많지 않은 것을 발견하게 된다. (정말로 중요한 비즈니스 로직은 이미 수많은 시니어 개발자분들에 의해 코드 리뷰를 거쳐 짜여 있을 가능성이 높다.) 대부분의 경우 매끄럽게 돌어가지 않는 작은 부분을 어떻게 하면 해결할 수 있는지에 대해 궁리한다. 이러한 작업은 대개 지난한 테스트 케이스를 살펴봐야 하는 경우가 많다. 또한, 스마트하고 번뜩이는 아이디어보다 노업적 근면성을 가지고 끈기 있게 지켜봐야 하는 작업일 수도 있다. 이와 같은 이상과 현실 사잉의 갭은 직접 부딪쳐 보지 않으면 알 수 있다. 따라서 프로그래머로서의 적성을 찾기 위해 이렇게 바닥을 긁어 보는 작업을 꾸준히 해 보아야 한다.</p>

<blockquote>
  <p>“즐겨라. 즐기는 자를 못 따라간다. 세상에서 그 얘기가 제일 싫어요. 최선을 다해서 몰입하고 올인하지 않으면서 성과를 낸다? 저는 그런 일은 없다고 생각해요. 어렸을 때 농구를 정말 좋아했지만, 책임감을 느끼고 난 후로는 전쟁이라고 생각했어요.”                                                                _서장훈</p>
</blockquote>

<p>돈을 받고 일을 하는 것은 프로의 영역이다. 일에 책임이 따른다는 의미이다. 당연히 괴로운 과정을 겪을 수밖에 없다. 이는 때때로 내가 집중해서 코딩하기 어려운 상황에서도 힘겹게 해내야 함을 의미한다. 때문에 그 힘겨움을 경험해 봐야 한다. 적어도 한 달은 그런 괴로움 속에서 스스로 끊임없이 물어야 한다. 나는 정말 프로그래밍에 적성이 있는지를 말이다.</p>

<p>정보의 유통기한에 대응하는 세 가지 자세</p>

<p>니콜라스 카(2004)는 일찍이 그의 저서 &lt;Does it matter?: information technology and the corosion of competitive advantage&gt;에서 IT분야의 정보는 유통기한을 갖는다는 점을 다음과 같이 지적했다.</p>

<blockquote>
  <p>IT 기술은 마치 전기나 물과 같아서, 해당 분야에서의 기술적 우위는 머지않아 모두가 혜택을 누리게 된다. 이처럼, IT 기술은 일반기업에 있어 경쟁우위를 가져다주는 요소라기보다 기반 산업의 성격으로 파악하는 편이 낫다 (Carr &amp; Carr, 2004)</p>
</blockquote>

<ol>
  <li>변하는 것과 변하지 않을 것에 대한 시각을 키우는 연습이 필요하다. 프로그래밍 언어는 흥망성쇠가 있다. 하지만, 비즈니스 로직을 짜는 프로그래머의 논리적 사고력에는 흥망성쇠가 없다. 지속적으로 발전할 뿐이다. 예를 들어 자바에서 재귀를 익숙하게 다룰 수 있다면 새로 배운 언어에서도 큰 문제 없이 재귀를 다룰 수 있을 것이며, 데이터베이스에서 SQL문을 활용하여 쿼리를 짤 수 있다면 지금과 같은 클라우드 환경에서도 빅쿼리(Big Query)등을 무리 없이 이용할 수 있을 것이다.</li>
  <li>가능하다면 다양한 기술을 접하여 예기치 못한 기술 충격에 대비해야 한다.</li>
  <li>어쩔 수 없이 늦었다면 새로운 것을 빨리 배우는 능력을 키워라.</li>
</ol>
:ET
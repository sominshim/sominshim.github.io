I"%<p><strong>서브쿼리(subquery)</strong>는 SQL문을 실행하는 데 필요한 데이터를 추가로 초회하기 위해 쿼<strong>리 내부에 포함되어 있는 SELETE 문</strong>을 의미한다.</p>

<p><u>서브쿼리를 포함하고 있는 쿼리를 메인쿼리(main query)</u>라고 부르며, <br />
(subquery = inner query / main query = outer query)</p>

<p>서브쿼리는 <strong>반드시 괄호(())로 감싸져 있어야 한다.</strong></p>

<h2 id="서브쿼리의-특징">서브쿼리의 특징</h2>

<ul>
  <li><strong>알려지지 않은 기준</strong>을 이용한 검색에 유용</li>
  <li>메인 쿼리가 실행되기 이전에 <strong>한번만 실행</strong></li>
  <li>한 문장에서 <strong>여러번 사용</strong> 가능</li>
</ul>

<div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">SELECT</span> <span class="o">*</span> 
<span class="k">FROM</span> <span class="n">employee</span>
<span class="k">WHERE</span> <span class="err">급여</span> <span class="o">&gt;</span>
<span class="p">(</span><span class="k">SELECT</span> <span class="err">급여</span> <span class="k">FROM</span> <span class="n">employee</span> <span class="k">WHERE</span> <span class="err">이름</span><span class="o">=</span><span class="s1">'John'</span><span class="p">);</span>
</code></pre></div></div>

<p>사원 John의 급여보다 높은 사원을 조회하고 싶을 때<br />
→ 사원 John의 급여를 알지 못해도, 서브쿼리를 이요하여 검색 가능</p>

<h3 id="서브쿼리-사용시-주의사항">서브쿼리 사용시 주의사항</h3>

<ol>
  <li>서브쿼리는 <strong>괄호와 함께</strong> 사용되어야 한다.</li>
  <li>서브쿼리 안에서 <strong>ORDER BY</strong> <strong>절은 사용할 수 없다.</strong></li>
  <li>서브쿼리는 <strong>연산자의 오른쪽</strong>에 사용되어야 한다.</li>
  <li>서브쿼리는 <strong>오로지</strong> <strong>SELECT문으로만 작성</strong> 할 수 있다.</li>
</ol>

<h2 id="서브쿼리의-분류">서브쿼리의 분류</h2>

<h3 id="반환-값의-개수에-따라">반환 값의 개수에 따라</h3>

<ul>
  <li>
    <p>단일 행 서브쿼리 (1개)</p>

    <ul>
      <li>=, &lt;&gt;, &lt;, &gt;, &lt;=, &gt;=</li>
    </ul>
  </li>
  <li>
    <p>다중 행 서브쿼리 (2개 이상)</p>

    <table>
      <thead>
        <tr>
          <th style="text-align: center">기호</th>
          <th style="text-align: center">뜻</th>
          <th style="text-align: center">예시</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td style="text-align: center">IN</td>
          <td style="text-align: center">하나라도 만족하면 반환</td>
          <td style="text-align: center">1 IN(1, 2, 3, 4)</td>
        </tr>
        <tr>
          <td style="text-align: center">ANY</td>
          <td style="text-align: center">하나라도 만족하면 반환<br />비교 연산 가능</td>
          <td style="text-align: center">10 &lt; ANY(1, 2, 3, 4)</td>
        </tr>
        <tr>
          <td style="text-align: center">ALL</td>
          <td style="text-align: center">모두 만족하면 반환<br />비교 연산 가능</td>
          <td style="text-align: center">99 &gt;= ALL(99, 100, 101)</td>
        </tr>
      </tbody>
    </table>
  </li>
</ul>

<h3 id="서브쿼리의-위치에-따라">서브쿼리의 위치에 따라</h3>

<ul>
  <li>
    <p>일반 서브쿼리 (WHERE)</p>
  </li>
  <li>
    <p>스칼라 서브쿼리 (SELECT)</p>

    <p>SELECT 절에서 사용하는 서브쿼리, 스칼라 서브쿼리는 오로지 한 행만 반환한다. 마치 JOIN을 사용한 것과 같은 결과를 나타낸다.</p>

    <div class="language-sql highlighter-rouge"><div class="highlight"><pre class="highlight"><code> <span class="k">SELECT</span> <span class="n">students</span><span class="p">.</span><span class="n">name</span><span class="p">,</span> <span class="p">(</span> <span class="k">SELECT</span> <span class="n">math</span>
   <span class="k">FROM</span> <span class="n">middle_test</span> <span class="k">as</span> <span class="n">m</span>
   <span class="k">WHERE</span> <span class="n">m</span><span class="p">.</span><span class="n">student_id</span> <span class="o">=</span> <span class="n">students</span><span class="p">.</span><span class="n">student_id</span>
<span class="p">)</span> <span class="k">AS</span> <span class="n">middle_avg</span>
<span class="k">FROM</span> <span class="n">students</span><span class="p">;</span>
</code></pre></div>    </div>
  </li>
</ul>

:ET